pipeline {
    agent any

    stages {
        stage ('Compile Stage') {
            steps {
                withGradle {
                    sh './gradlew clean'
                }
            }
        }

        stage ('Testing Stage') {
            steps {
                withGradle {
                    sh './gradlew build'
                }
            }
        }

        stage ('Run UITest') {
            steps {
                withGradle {
                    sh '$ANDROID_HOME/platform-tools/adb devices'
                    sh './gradlew debugExecuteScreenshotTests -Precord -Pandroid.testInstrumentationRunnerArguments.class=com.vnhanh.musicplayer.MainActivityUITest#verify'
                }
            }
        }
    } // end stages

    post {
         always {
             echo 'This will always run'
         }
         success {
             echo 'This will run only if successful'
             mail bcc: '', body: "<b>Example</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: '', mimeType: 'text/html', replyTo: '', subject: "ERROR CI: Project name -> ${env.JOB_NAME}", to: "hanh.v@kbtg.tech";
         }
         failure {
             mail bcc: '', body: "<b>Example</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: '', mimeType: 'text/html', replyTo: '', subject: "ERROR CI: Project name -> ${env.JOB_NAME}", to: "hanh.v@kbtg.tech";
         }
         unstable {
             echo 'This will run only if the run was marked as unstable'
         }
         changed {
             echo 'This will run only if the state of the Pipeline has changed'
             echo 'For example, if the Pipeline was previously failing but is now successful'
         }
    }
}